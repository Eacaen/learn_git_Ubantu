/*搜集自网络&<<GitHub入门与实践>>
/*测试可行
/*

git 名词：
/*******************************************************************
********************************************************************/
执行git clone 后默认处于master分支下,自动将origin 设置为远程仓库标识符

git pull = git fetch + merge to local #并不是很懂

在此附上git常用命令以供使用：
/*******************************************************************
********************************************************************/
git init 初始化

git remote add origin 仓库的网址

/*********************************************************************
**********************************************************************/

git clone <address>：复制代码库到本地；

git checkout -b local_name origin/name  获取远程name分支 

git add <file> ...：添加文件到代码库中(在库中删除文件也要添加)；

git add --all 添加所有

git rm <file> ...：删除代码库的文件；

git commit -m <message>：提交更改，在修改了文件以后，使用这个命令提交修改。

git diff 查看当前工作树与暂存区的区别
	 (修改完了以后直接可以看到,在git add 之前)
		<+>表示新添加的行;<->表示被删除的行

git diff HEAD 查看工作树与最新提交的区别

git pull：从远程同步代码库到本地。
git pull origin name_branch 同步分支至本地

git push：推送代码到远程代码库
	git push -u origin name_branch 
这样执行git push 命令,当前分支的内容就会被推送给远程仓库origin的master
分支.参数-u可以在推送的同时,将origin的master分支设置为本地仓库当前分支的upstream.添加这个仓库,将来运行git pull从远程仓库获取内容时,本地仓库就可以直接从origin的master分支获取内容,省去了另外添加参数的麻烦.
/*********************************************************************
**********************************************************************/
git log：查看提交记录（即历史的 commit 记录）

git log -p (xxx) 查看xxx(不必须)提交日志及提交前后的差别

git log --graph  以图表形式查看分支

/*******************************************************************
********************************************************************/

git branch：查看当前分支。带*是当前分支。

* git branch -a 查看本地和远程分支  -a 前面带*号的代表你当前工作目录所处的分支

git branch <branch-name>：新建一个分支。

git branch -d <branch-name>：删除一个分支。

git checkout <branch-name>：切换到指定分支。

git checkout -b <branch-name>：创建,切换到指定分支。

git checkout - 切换至上一分支

/*******************************************************************
********************************************************************/
git merge xxx 合并分支
git merge -- .. xx 中有各种选项tabtab自己试

git reset <log>：恢复到历史版本

git reset --hard <哈希值>  回溯至某版本

git status：当前修改的状态，是否修改了还没提交，或者那些文件未使用。

/*******************************************************************
********************************************************************/
仓库的维护
clone 后将原仓库设为远端仓库
git remote add upstream 网址
获取最新数据
git fetch upstream
git merge upstream/master
当前分支获得最新的代码

/*******************************************************************
********************************************************************/

Pull Requst 是自己修改源代码后,请求对方仓库采纳的一种行为.
--git clone 后在本地 branch中进行作业
--在本地仓库中创建分支,然后git push -u origin branch_name 上传本地分支
--在登陆后切换到远程自己账号下的新分支中去进行PR操作.可以在界面顶部的pull request 中看到PR的状态.
